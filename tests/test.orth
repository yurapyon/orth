"todo" open-input-file unwrap
{ read-line,p } keep
{ read-line,p } keep
{ read-line,p } keep
{ read-line,p } keep
.stack'

[ ]vec :v @
"w" "file" <file>,open unwrap
{ v downgrade unwrap swap file.display } keep

; read-line .stack'




{

{ bi* } :bis @

#\space 32 { char>int } { int>char } bis
.stack'

; is there a way to define private words this way

{
  { } :make @
  { make } :make,v2 @
  { } :get @
  { } :set @
} :&vec @

{ { :rename :make :make-vec }
  { :prefix :* :v }
} set-renaming-rules!
&vec
clear-renaming-rules!

{ rules ...  }
:&vec import

{ :a
  :b
  :c
  :d
  { :e 100 }
} :thing @enum

{ { { dup thing.a = } { } }
  { { dup thing.b = } { } }
  { { dup thing.c = } { } }
  { { dup thing.d = } { } }
  { }
} cond

{ { thing.a { } }
  { thing.b { } }
  { thing.c { } }
  { thing.d { } }
  { }
} case

} drop
