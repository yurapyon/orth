{ :inc :stop :acc }a :counter @record

{ { counter-acc } { counter-stop } bi <
} :counter-should-continue? @

{ { { counter-acc } { counter-inc } bi + } keep counter-acc!
} :counter-increment! @

{ 0 make-counter
  { iterator-obj counter-should-continue? }
  { dup should-continue?
    { iterator-obj { counter-acc } { counter-increment! } bi }
    { drop }
    if
    }
  <iterator>
} :count @

;;

2 5 count collect!
2 5 count { 2 * } map collect!
2 5 count 0 { + } fold!
.stack
